# -*- coding: utf-8 -*-
"""Image Detection.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ZAtK4Jv1yRYEJBaIVrrN76p8NIWY4aid
"""

# Commented out IPython magic to ensure Python compatibility.
# %pip -q install opencv-python

import cv2
import numpy as np
# from google.colab.patches import cv2_imshow
import matplotlib.pylab as plt
import pandas as pd
from glob import glob

files = glob('Elephant.jpg')

# files
img_mpl = plt.imread(files[0])
img_cv2 = cv2.imread(files[0])

#3d array
img_mpl

# type(img_mpl) #type

img_mpl.shape, img_cv2.shape #3d - height, width, channel : rgb

pd.Series(img_mpl.flatten()).plot(kind='hist', bins = 50, title='pixel distribution') #bins: specifies the number of bins (groups) in the histogram, giving a smooth representation of the pixel intensity distribution.
plt.show()

fig, ax = plt.subplots(figsize= (5,5))
ax.imshow(img_mpl)
# ax.axis('off')
plt.show()

#Display RGB channels

fig, axs = plt.subplots(1,3,figsize = (10,5))
axs[0].imshow(img_mpl[:,:,0], cmap='Reds')
axs[1].imshow(img_mpl[:,:,1], cmap='Greens')
axs[2].imshow(img_mpl[:,:,2], cmap='Blues')
axs[0].axis('off')
axs[1].axis('off')
axs[2].axis('off')
plt.show()

#mpl and cv2 load the images differently
#mpl: RGB, cv2:BGR

fig, axs = plt.subplots(1,2,figsize = (10,5))
axs[0].imshow(img_mpl)
axs[1].imshow(img_cv2)

axs[0].axis('off')
axs[1].axis('off')

axs[0].set_title('MPL image')
axs[1].set_title('CV2 image')

#Converting from BGR to RGB

img_cv2_rgb = cv2.cvtColor(img_cv2, cv2.COLOR_BGR2RGB)
fig, ax = plt.subplots()
ax.imshow(img_cv2_rgb)
ax.axis('off')
plt.show()

#Blurring the images

kernel_3x3 = np.ones((3,3), np.float32) / 10
blur = cv2.filter2D(img_mpl, -1, kernel_3x3)
fig, ax = plt.subplots()
ax.imshow(blur)
ax.axis('off')
ax.set_title('Blurred Image')
plt.show()

cv2.imwrite('cv2_elephant.jpg', blur)